config:
  version-candidate: VERSION

build:
  correctness:
    build:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.6.10/lib/python3.6/site-packages/lsb_release.py
        ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME \
        ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD \
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel build //...
    test-concept:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.6.10/lib/python3.6/site-packages/lsb_release.py
        ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME \
        ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD \
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //:test_concept --test_output=errors
    test-keyspace:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.6.10/lib/python3.6/site-packages/lsb_release.py
        ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME \
        ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD \
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //:test_keyspace --test_output=errors
    test-answer:
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.6.10/lib/python3.6/site-packages/lsb_release.py
        ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME \
        ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD \
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //:test_answer --test_output=errors
    deploy-pip-snapshot:
      filter:
        owner: graknlabs
        branch: master
      machine: graknlabs-ubuntu-20.04
      type: foreground
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.6.10/lib/python3.6/site-packages/lsb_release.py
        ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME \
        ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD \
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        export DEPLOY_PIP_USERNAME=$REPO_GRAKN_USERNAME
        export DEPLOY_PIP_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run --define version=$(git rev-parse HEAD) //:deploy-pip -- snapshot
    test-deployment:
      filter:
        owner: graknlabs
        branch: master
      machine: graknlabs-ubuntu-20.04
      type: foreground
      dependencies: [deploy-pip-snapshot]
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.6.10/lib/python3.6/site-packages/lsb_release.py
        ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME \
        ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD \
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel run //:grakn-extractor -- dist/grakn-core-server-linux
        nohup ./dist/grakn-core-server-linux/grakn server start
        sleep 60
        echo -n "0.0.0-$CIRCLE_SHA1" > VERSION
        sed -i -e "s/CLIENT_PYTHON_VERSION_MARKER/$(cat VERSION)/g" tests/deployment/requirements.txt
        cat tests/deployment/requirements.txt
        pip install --upgrade pip
        pip install -r tests/deployment/requirements.txt
        cd tests/deployment/ && python -m unittest test
  execution:
    - build
    - test-concept
    - test-keyspace
    - test-answer
    - deploy-pip-snapshot
    - test-deployment


release:
  filter:
    owner: graknlabs
    branch: master
  validation:
    validate-dependencies:
      machine: graknlabs-ubuntu-20.04
      script: bazel test //:release-validate-deps --test_output=streamed
  deployment:
    deploy-github:
      machine: graknlabs-ubuntu-20.04
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.6.10/lib/python3.6/site-packages/lsb_release.py
        pip install certifi
        export RELEASE_NOTES_TOKEN=$REPO_GITHUB_TOKEN
        bazel run @graknlabs_dependencies//tool/release:create-notes -- client-python $(cat VERSION) ./RELEASE_TEMPLATE.md
        bazel clean --expunge
        export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
          bazel run --define version=$(cat VERSION) //:deploy-github -- $CIRCLE_SHA1
    deploy-pip-release:
      machine: graknlabs-ubuntu-20.04
      script: |
        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.6.10/lib/python3.6/site-packages/lsb_release.py
        export DEPLOY_PIP_USERNAME=$REPO_PYPI_USERNAME
        export DEPLOY_PIP_PASSWORD=$REPO_PYPI_PASSWORD
        bazel run --define version=$(cat VERSION) //:deploy-pip -- release
      dependencies: [deploy-github]
